"use client";

import { createClient } from "@/lib/supabase/client";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import Link from "next/link";
import { useState } from "react";
import ErrorAlert from "./error-alert";
import translateError from "@/utils/translateError";

export function ForgotPasswordForm() {
  const [email, setEmail] = useState("");
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState(false);
  const [isLoading, setIsLoading] = useState(false);

  const handleForgotPassword = async (e: React.FormEvent) => {
    e.preventDefault();
    const supabase = createClient();
    setIsLoading(true);
    setError(null);

    try {
      const { error } = await supabase.auth.resetPasswordForEmail(email, {
        redirectTo: `${window.location.origin}/auth/update-password`,
      });
      if (error) throw error;
      setSuccess(true);
    } catch (err: unknown) {
      setError(err instanceof Error ? err.message : "Ocorreu um erro");
    } finally {
      setIsLoading(false);
    }
  };

  if (success) {
    return (
      <div className="flex flex-col items-center justify-center gap-4">
        <h2 className="text-2xl font-bold text-center">Verifique seu email</h2>
        <p className="text-gray-500 text-center text-sm">
          Instruções para redefinir sua senha foram enviadas.
        </p>
        <Link href="/auth/login" className="text-emerald-900 underline">
          Voltar ao login
        </Link>
      </div>
    );
  }

  return (
    <form
      role="forgot-password"
      className="flex items-center justify-center flex-col gap-4"
      onSubmit={handleForgotPassword}
    >
      <div className="self-start">
        <h2 className="text-2xl font-bold">Redefinir senha</h2>
        <h3 className="text-gray-500 text-sm">
          Digite seu email e enviaremos o link para redefinir sua senha
        </h3>
      </div>

      <Input
        type="email"
        placeholder="Email"
        required
        value={email}
        onChange={(e) => setEmail(e.target.value)}
      />


      
        <div className="flex flex-row items-center justify-between w-full">
                    <Link href={'/auth/login'} className="text-sm text-gray-400">Voltar</Link>
                
                <div>
                    <Button
                        className="w-[5rem] font-bold"
                        disabled={isLoading}
                        type="submit"
                    >
                        {isLoading ? "Enviando..." : "Enviar"}
                    </Button>
                </div>
                </div>
                {error && <ErrorAlert error={translateError(error)} />}
    </form>
  );
}
